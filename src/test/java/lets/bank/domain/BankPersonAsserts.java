/* 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package lets.bank.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BankPersonAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBankPersonAllPropertiesEquals(BankPerson expected, BankPerson actual) {
        assertBankPersonAutoGeneratedPropertiesEquals(expected, actual);
        assertBankPersonAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBankPersonAllUpdatablePropertiesEquals(BankPerson expected, BankPerson actual) {
        assertBankPersonUpdatableFieldsEquals(expected, actual);
        assertBankPersonUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBankPersonAutoGeneratedPropertiesEquals(BankPerson expected, BankPerson actual) {
        // empty method
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBankPersonUpdatableFieldsEquals(BankPerson expected, BankPerson actual) {
        assertThat(actual)
            .as("Verify BankPerson relevant properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()))
            .satisfies(a -> assertThat(a.getCitizenId()).as("check citizenId").isEqualTo(expected.getCitizenId()))
            .satisfies(a -> assertThat(a.getThaiName()).as("check thaiName").isEqualTo(expected.getThaiName()))
            .satisfies(a -> assertThat(a.getEnglishName()).as("check englishName").isEqualTo(expected.getEnglishName()))
            .satisfies(a -> assertThat(a.getCreatedBy()).as("check createdBy").isEqualTo(expected.getCreatedBy()))
            .satisfies(a -> assertThat(a.getCreatedDate()).as("check createdDate").isEqualTo(expected.getCreatedDate()))
            .satisfies(a -> assertThat(a.getLastModifiedBy()).as("check lastModifiedBy").isEqualTo(expected.getLastModifiedBy()))
            .satisfies(a -> assertThat(a.getLastModifiedDate()).as("check lastModifiedDate").isEqualTo(expected.getLastModifiedDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBankPersonUpdatableRelationshipsEquals(BankPerson expected, BankPerson actual) {
        // empty method
    }
}
